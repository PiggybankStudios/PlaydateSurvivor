{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"PLAYD",
				"PLAYDATE_SIMULATOR"
			],
			[
				"PLAYDATE_",
				"PLAYDATE_SIMULATOR"
			],
			[
				"EXTERN",
				"EXTERN_C_END"
			],
			[
				"MyPrint",
				"MyVaListPrintf"
			],
			[
				"va",
				"va_list"
			],
			[
				"ProjectNa",
				"ProjectNameSafe"
			],
			[
				"Ouptut",
				"OutputObjName"
			],
			[
				"Playdate",
				"PlaydateChip"
			],
			[
				"AddInv",
				"TryAddItemStackToInventory"
			],
			[
				"PdDrawTex",
				"PdDrawTexturedRec"
			],
			[
				"ItemFlags_",
				"ItemFlags_InStore"
			],
			[
				"InvSlotT",
				"InvSlotType_Research"
			],
			[
				"InvSlotFla",
				"InvSlotFlags_AutoDump"
			],
			[
				"handTe",
				"handTextPos"
			],
			[
				"hadnTe",
				"handTextPos"
			],
			[
				"hadnI",
				"handIconSize"
			],
			[
				"InvSlotFlag",
				"InvSlotFlags_Separate"
			],
			[
				"buyI",
				"buyItemValue"
			],
			[
				"displayNam",
				"displayNameSize"
			],
			[
				"InvS",
				"InvSlotType_Sell"
			],
			[
				"InvSlotType_",
				"InvSlotType_GroupChange"
			],
			[
				"firs",
				"firstestSlot"
			],
			[
				"numSlo",
				"numSlotsPerGroup"
			],
			[
				"PdDrawTe",
				"PdDrawTextPrint"
			],
			[
				"benCou",
				"beanCountFont"
			],
			[
				"inve",
				"isInventoryOpen"
			],
			[
				"sele",
				"selectionIndex"
			],
			[
				"selection",
				"selectionGridPos"
			],
			[
				"PdDrawRe",
				"PdDrawRecOutline"
			],
			[
				"FormatNu",
				"FormatNumberWithCommasNt"
			],
			[
				"top",
				"topBarRec"
			],
			[
				"InvType",
				"InvType_t"
			],
			[
				"HandlEb",
				"HandleBtnExtended"
			],
			[
				"InvSlotType",
				"InvSlotType_Default"
			],
			[
				"numIte",
				"numItemsExpected"
			],
			[
				"parse",
				"parseFailureReason"
			],
			[
				"TryParseU",
				"TryParseU16"
			],
			[
				"GetRuntime",
				"GetRuntimeIdDisplayName"
			],
			[
				"GetRuntimeId",
				"GetRuntimeIdDisplayName"
			],
			[
				"GetItem",
				"GetItemIdDisplayStr"
			],
			[
				"displa",
				"displayName"
			],
			[
				"SplitS",
				"SplitStringFixed"
			],
			[
				"displayS",
				"displayStrSize"
			],
			[
				"PartLayer_",
				"PartLayer_HighUi"
			],
			[
				"HandleB",
				"HandleBtnExtended"
			],
			[
				"InvButton",
				"InvButton_Combine"
			],
			[
				"TryDeserRecipeBook",
				"TryDeserRecipeBookError_t"
			],
			[
				"filePA",
				"filePathStr"
			],
			[
				"SetProce",
				"SetProcessLogFilePath"
			],
			[
				"include",
				"includePath"
			],
			[
				"SetPro",
				"SetProcessLogFilePath"
			],
			[
				"fileSee",
				"fileSeekEnd"
			],
			[
				"StrE",
				"StrEqualsIgnoreCase"
			],
			[
				"Recipe",
				"RecipeBook_t"
			],
			[
				"Va",
				"VarArrayLoop"
			],
			[
				"MyMem",
				"MyMemCopy"
			],
			[
				"other",
				"otherInventory"
			],
			[
				"Inven",
				"Inventory_t"
			],
			[
				"GetInvSlot",
				"GetInvSlotMaxOrMinInRow"
			],
			[
				"Basicall",
				"BasicallyEqualR32"
			],
			[
				"Basica",
				"BasicallyEqualR32"
			],
			[
				"PdDrawRecOu",
				"PdDrawRecOutlineArc"
			],
			[
				"inc",
				"inclusiveMin"
			],
			[
				"display",
				"displayNumberFont"
			],
			[
				"displayNu",
				"displayNumber"
			],
			[
				"Par",
				"Particle_t"
			],
			[
				"Part",
				"Particle_t"
			],
			[
				"GetTile",
				"GetTileTypeDrop"
			],
			[
				"PdDrawRE",
				"PdDrawRecOutline"
			],
			[
				"PLAYERS",
				"PLAYER_SIZE"
			],
			[
				"Spri",
				"SpriteSheet_t"
			],
			[
				"amou",
				"amountToAdd"
			],
			[
				"Inve",
				"Inventory_t"
			],
			[
				"taret",
				"targetTileRec"
			],
			[
				"targetTile",
				"targetTileRec"
			],
			[
				"GetTileTyp",
				"GetTileTypeDrop"
			],
			[
				"GetTileA",
				"GetWorldTileAt"
			],
			[
				"INV_SLO",
				"INV_SLOT_SIZE"
			],
			[
				"isS",
				"isSelected"
			],
			[
				"SLOT_",
				"INV_SLOT_LARGE_SIZE"
			],
			[
				"TARGET",
				"TARGET_FRAME_TIME"
			],
			[
				"INV_SLOTSI",
				"INV_SLOT_LARGE_SIZE"
			],
			[
				"INV_SLOT",
				"INV_SLOT_LARGE_SIZE"
			],
			[
				"debug",
				"debugEnabled"
			],
			[
				"LCDB",
				"LCDBitmapDrawMode"
			],
			[
				"HandleCrank",
				"HandleCrankDelta"
			],
			[
				"Anima",
				"AnimateU64"
			],
			[
				"crankHin",
				"crankHintBackSheet"
			],
			[
				"open",
				"openScrollInventory"
			],
			[
				"TileType_",
				"TileType_Peppermint"
			],
			[
				"nuMSlot",
				"numSlotsOut"
			],
			[
				"isPlayer",
				"isPlayerNearScreenEdge"
			],
			[
				"MyMM",
				"MyMemCopy"
			],
			[
				"prefer",
				"preferVertical"
			],
			[
				"resolveDi",
				"resolveDistLeft"
			],
			[
				"PLAYER",
				"PLAYER_COLLISION_REC"
			],
			[
				"Dir2ExFrom",
				"Dir2ExFromDir2Flags"
			],
			[
				"butt",
				"buttonListRec"
			],
			[
				"MMenuAc",
				"MMenuAction_Play"
			],
			[
				"VarArrayGet",
				"VarArrayGetHard"
			],
			[
				"Clear",
				"ClearButtonsMainMenu"
			],
			[
				"Var",
				"VarArrayLoop"
			],
			[
				"VarA",
				"VarArrayLoop"
			],
			[
				"GAME_VERS",
				"GAME_VERSION_MAJOR"
			],
			[
				"reques",
				"requestedState"
			],
			[
				"AppStateChangeTyp",
				"AppStateChangeType_Push"
			],
			[
				"UpdateSoun",
				"UpdateSoundInstance"
			],
			[
				"PER",
				"PERF_GRAPH_WIDTH"
			],
			[
				"parti",
				"partialRanges"
			],
			[
				"StrCom",
				"MyStrCompareNt"
			],
			[
				"StrEq",
				"StrEqualsIgnoreCase"
			],
			[
				"uknown",
				"unknownCharData"
			],
			[
				"GetBit",
				"GetBitmapData"
			],
			[
				"LCDFON",
				"LCDFontPage"
			],
			[
				"GetFontRa",
				"GetFontRangeIndex"
			],
			[
				"FontRa",
				"FontRange_Numbers"
			],
			[
				"FontRan",
				"FontRange_t"
			],
			[
				"numF",
				"numFramesX"
			],
			[
				"realE",
				"realElapsedMsU32"
			],
			[
				"numFram",
				"numFramesX"
			],
			[
				"elapsedM",
				"elapsedMsU32"
			],
			[
				"scra",
				"scratchArena"
			],
			[
				"Btn_Crank",
				"Btn_CrankDock"
			],
			[
				"crankDe",
				"crankDeltaHandled"
			],
			[
				"crankDo",
				"crankDockedChanged"
			],
			[
				"crankAn",
				"crankAnglePrev"
			],
			[
				"BtnState",
				"BtnState_t"
			],
			[
				"BtnPress",
				"BtnPressedRaw"
			]
		]
	},
	"buffers":
	[
		{
			"file": "build/build.bat",
			"settings":
			{
				"buffer_size": 330,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "@ech"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " off"
					},
					"BAAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					4,
					"left_delete",
					null,
					"BAAAAAcAAAAAAAAABwAAAAAAAAABAAAAZgYAAAAAAAAABgAAAAAAAAABAAAAZgUAAAAAAAAABQAAAAAAAAABAAAAbwQAAAAAAAAABAAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAAQAAAAAAAAABQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " ofof"
					},
					"BQAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					2,
					"left_delete",
					null,
					"AgAAAAkAAAAAAAAACQAAAAAAAAABAAAAZggAAAAAAAAACAAAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAAgAAAAAAAAACQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAAAkAAAAAAAAACQAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n\npdc"
					},
					"BQAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4AAAAAAAAADwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"left_delete",
					null,
					"AQAAAA4AAAAAAAAADgAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " ..."
					},
					"BAAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"left_delete",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "/S"
					},
					"AgAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAABIAAAAAAAAAEgAAAAAAAAABAAAAUw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "src"
					},
					"AwAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABUAAAAAAAAAFgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAABUAAAAAAAAAFQAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4AAAAAAAAADwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"paste",
					null,
					"AQAAAA8AAAAAAAAAMAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\npushd"
					},
					"BgAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " .."
					},
					"AwAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABMAAAAAAAAAFAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEAAAAAAAAAQQAAAAAAAAD////////vfw"
				],
				[
					41,
					2,
					"left_delete",
					null,
					"AgAAAAsAAAAAAAAACwAAAAAAAAAJAAAAcHVzaGQgLi4KCgAAAAAAAAAKAAAAAAAAAAEAAAAK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAACwAAAAAAAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAADEAAAAAAAAAMgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAADgAAAAAAAAAOQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgAAAAAAAAAOAAAAAAAAAD////////vfw"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAADQAAAAAAAAANAAAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUAAAAAAAAANQAAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAADQAAAAAAAAANQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQAAAAAAAAANAAAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAADkAAAAAAAAAOQAAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoAAAAAAAAAOgAAAAAAAAD////////vfw"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "\necho"
					},
					"BQAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABAAAAAAAAAAEgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "Running"
					},
					"BwAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " PDC"
					},
					"BAAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwAAAAAAAAAHQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAABwAAAAAAAAAHAAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0AAAAAAAAAHQAAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "..."
					},
					"AwAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "\nechoi"
					},
					"BgAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8AAAAAAAAATwAAAAAAAAD////////vfw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUAAAAAAAAAVQAAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAAFUAAAAAAAAAVQAAAAAAAAABAAAAIFQAAAAAAAAAVAAAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYAAAAAAAAAVgAAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFUAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUAAAAAAAAAVQAAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "Done"
					},
					"BAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAFkAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYAAAAAAAAAVgAAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoAAAAAAAAAWwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoAAAAAAAAAWgAAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"left_delete",
					null,
					"AQAAAFoAAAAAAAAAWgAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsAAAAAAAAAWwAAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAFoAAAAAAAAAWwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoAAAAAAAAAWgAAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"paste",
					null,
					"AQAAAAoAAAAAAAAAZQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUAAAAAAAAAZQAAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"insert_snippet",
					{
						"contents": "%${0:$SELECTION}%"
					},
					"AgAAAH0AAAAAAAAAfQAAAAAAAAADAAAAcGRjfQAAAAAAAACCAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAAAAAAAAAAfQAAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"paste",
					null,
					"AgAAAH4AAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACIAAAAAAAAAAMAAABwZGM",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4AAAAAAAAAgQAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADZAAAAQGVjaG8gb2ZmCgpzZXQgUGxheWRhdGVTZGtEaXJlY3Rvcnk9JVBMQVlEQVRFX1NES19QQVRIJQpzZXQgUGRjRXhlTmFtZT0lUGxheWRhdGVTZGtEaXJlY3RvcnklXGJpblxwZGMKCmVjaG8gW1J1bm5pbmcgUERDLi4uXQolUGRjRXhlTmFtZSUgLXNka3BhdGggIiVQbGF5ZGF0ZVNka0RpcmVjdG9yeSUiICIuLlxzcmMiICJQbGF5ZGF0ZVN1cnZpdm9yLnBkeCIKZWNobyBbRG9uZSFdCgAAAAAAAAAASgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QAAAAAAAADZAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/main.lua",
			"settings":
			{
				"buffer_size": 1112,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 173.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"prett",
				"Pretty JSON: Format JSON Lines"
			],
			[
				"json",
				"Indent JSON"
			],
			[
				"to tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"todo",
				"Set Syntax: TODO List Syntax"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"nsis",
				"Set Syntax: NSIS"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"REMOVE",
				"Package Control: Remove Package"
			],
			[
				"webaSS",
				"Set Syntax: WAST (WebAssembly Text)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"wrpa",
				"Wrap at Ruler"
			],
			[
				"C#",
				"Set Syntax: C#"
			],
			[
				"MyC",
				"Set Syntax: My C Syntax"
			],
			[
				"my c",
				"Set Syntax: My C Syntax"
			],
			[
				"snipp",
				"Snippet: VarArrayLoop"
			],
			[
				"My C",
				"Set Syntax: My C Syntax"
			],
			[
				"Snippet: ",
				"Snippet: PIN_INPUT"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"we",
				"Word Wrap: Toggle"
			],
			[
				"removepack",
				"Package Control: Remove Package"
			],
			[
				"synpcq",
				"Set Syntax: PCQ Text Resource"
			],
			[
				"pcqtext",
				"Set Syntax: PCQ Text Resource"
			],
			[
				"pcq",
				"Set Syntax: PCQ Text Resource"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"browse",
				"Browse Mode: Outline (Left)"
			],
			[
				"colorsce",
				"UI: Select Color Scheme"
			],
			[
				"material the",
				"Material Theme: Advanced configuration"
			],
			[
				"theme",
				"Material Theme: Extras"
			],
			[
				"scope",
				"Toggle ScopeAlways"
			],
			[
				"colorsc",
				"UI: Select Color Scheme"
			],
			[
				"theme ",
				"UI: Select Theme"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"set syn C",
				"Set Syntax: C"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"myc",
				"Set Syntax: My C Syntax"
			],
			[
				"pretty",
				"Pretty JSON: Format JSON Lines"
			],
			[
				"pret",
				"Pretty JSON: Format JSON Lines"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"instal packa",
				"Package Control: Install Package"
			],
			[
				"my C",
				"Set Syntax: My C Syntax"
			],
			[
				"wrapo",
				"Word Wrap: Toggle"
			],
			[
				"regex",
				"Set Syntax: My Regular Expressions File"
			],
			[
				"my",
				"Set Syntax: My C Syntax"
			],
			[
				"regular",
				"Set Syntax: My Regular Expressions File"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"scheme",
				"UI: Select Color Scheme"
			],
			[
				"batch",
				"Set Syntax: Batch File"
			],
			[
				"myC",
				"Set Syntax: My C Syntax"
			],
			[
				"tab",
				"Indentation: Convert to Tabs"
			],
			[
				"con tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"My Rege",
				"Set Syntax: My Regular Expressions File"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"tra",
				"Whitespace: Remove Trailing Whitespace"
			],
			[
				"trail",
				"Whitespace: Remove Trailing Whitespace"
			],
			[
				"openg",
				"Set Syntax: OpenGL SL"
			],
			[
				"Glsl",
				"Set Syntax: OpenGL SL"
			],
			[
				"TODO",
				"Set Syntax: TODO List Syntax"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"",
				"DocBlockr: Reparse comment block"
			],
			[
				"doc",
				"DocBlockr: Reparse comment block"
			],
			[
				"decor",
				"DocBlockr: Decorate line comment"
			],
			[
				"search",
				"Preferences: Search in Project Settings – Default"
			],
			[
				"My c",
				"Set Syntax: My C Syntax"
			],
			[
				"date",
				"InsertDate: Default"
			],
			[
				"My",
				"Set Syntax: My C Syntax"
			],
			[
				"my c++",
				"Set Syntax: My C++ Syntax"
			],
			[
				"tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"synt C++",
				"Set Syntax: C++"
			],
			[
				"synt C",
				"Set Syntax: C"
			],
			[
				"git",
				"GitGutter: Compare Against HEAD"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"markd",
				"Set Syntax: Markdown Light"
			],
			[
				"mard",
				"Set Syntax: Markdown Light"
			],
			[
				"markdo",
				"Set Syntax: Markdown Light"
			],
			[
				"markdow",
				"Set Syntax: Markdown"
			],
			[
				"markdown",
				"Set Syntax: Markdown"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"syntax c",
				"Set Syntax: C"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"hlsl",
				"Set Syntax: High Level SL"
			],
			[
				"intall",
				"Package Control: Install Package"
			],
			[
				"setting",
				"Preferences: Settings"
			]
		],
		"width": 741.0
	},
	"console":
	{
		"height": 424.0,
		"history":
		[
			"print_scopes",
			"view.run_command(\"example\")",
			"view.run_command(\"something\")",
			"view.run_command(\"kill_word\")",
			"view.run_command(\"open_string_file\")",
			"view.run_command(\"something\")",
			"view.run_command(\"kill_word\")",
			"view.run_command(\"something\")",
			"view.run_command('kill_word')",
			"view.run_command('view_info')",
			"run_command(\"view_info\")",
			"view.run_command(\"view_info\")",
			"view.run_command('taylors_fun')",
			"view.run_command('taylor')",
			"view.run_command('Taylor')",
			"view.run_command('example')"
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/G/Games/Other/PlaydateSurvivor"
	],
	"file_history":
	[
		"/G/Games/Other/PlaydateSurvivor/build/PlaydateSurvivor.pdx/main.pdz",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_defines_check.h",
		"/C/gamedev/projects/Playfactory/lib/include/README.txt",
		"/C/gamedev/projects/PigParts/lib/include/README.txt",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/input.cpp",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/pig_main.cpp",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/main.cpp",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_std.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_types.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_memory.h",
		"/C/gamedev/projects/Playfactory/build/Playfactory.d",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/gcc_compiler_options.txt",
		"/C/Users/robbitay/AppData/Local/Temp/Rar$DRa0.996/src/main.c",
		"/C/Users/robbitay/AppData/Local/Temp/Rar$DRa0.769/Makefile",
		"/C/gamedev/projects/Playfactory/build/Makefile",
		"/F/Programs/PlaydateSDK/C_API/Examples/Hello World/src/main.c",
		"/F/Miscellaneous/echo_vars.bat",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/playdate_notes.todo",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/main.c",
		"/F/Programs/PlaydateSDK/C_API/Examples/Hello World/build_nmake/CMakeFiles/Makefile.cmake",
		"/F/Programs/PlaydateSDK/C_API/Examples/Hello World/build_nmake/Makefile",
		"/F/Programs/PlaydateSDK/C_API/Examples/Hello World/build_nmake/CMakeFiles/Makefile2",
		"/F/Programs/PlaydateSDK/C_API/Examples/Hello World/build_nmake/CMakeFiles/hello_world_DEVICE.dir/build.make",
		"/F/Programs/PlaydateSDK_Backup/C_API/buildsupport/common.mk",
		"/F/Programs/PlaydateSDK_Backup/C_API/Examples/Hello World/Makefile",
		"/F/Programs/PlaydateSDK_Backup/C_API/Examples/Hello World/CMakeLists.txt",
		"/F/Programs/PlaydateSDK/C_API/buildsupport/link_map.ld",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_assert.h",
		"/C/gamedev/projects/Playfactory/game/game_state.cpp",
		"/C/gamedev/projects/Playfactory/game/game_defines.h",
		"/C/gamedev/projects/Playfactory/data/pdxinfo",
		"/F/Programs/PlaydateSDK/Disk/Games/Playfactory.pdx/pdxinfo",
		"/F/Programs/PlaydateSDK/C_API/Examples/README.md",
		"/C/gamedev/projects/Playfactory/build/Playfactory.pdx/pdex.bin",
		"/C/gamedev/projects/Playfactory/build/Playfactory.pdx/pdxinfo",
		"/G/Games/Seasons/Season-001/Casual Birder.pdx/metadata.json",
		"/G/Data/com.a-m.beats-bleeps-boogie/save.json",
		"/G/Data/com.lowtek.chewchewmimic/savecoins.txt",
		"/G/Data/com.lowtek.chewchewmimic/savelevel.txt",
		"/G/Data/com.radstronomical.CasualBirder/photosFile1/photo1",
		"/G/Data/com.radstronomical.CasualBirder/file1.json",
		"/G/Data/com.uvula.crankin/progress.dat",
		"/G/Data/user.86282.com.hteumeuleu.celeste/game.json",
		"/G/Data/user.86282.com.justinsearcy.stream/levelCompleteData.json",
		"/G/Data/user.86282.com.PossiblyAxolotl.RocketBytes/levels/WALLZ.json",
		"/G/Data/user.86282.com.PossiblyAxolotl.RocketBytes/savegame.json",
		"/G/Data/user.86282.com.tizianzeltner.musicbox/config.json",
		"/G/Data/user.86282.com.squidgoddev.almosttennis/data.json",
		"/F/Programs/PlaydateSDK_Backup/C_API/buildsupport/setup.c",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/pig_main.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_intrinsics.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_easing.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_string.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_string_buffer.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_colors.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_string_builder.h",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/perf_graph.cpp",
		"/C/gamedev/projects/Playfactory/game/game_player.cpp",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/pd_api_ext.h",
		"/F/Programs/PlaydateSDK/Examples/Game Template/makefile",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/items_surface.txt",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/recipes_surface.txt",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/items_machines.txt",
		"/C/gamedev/projects/Playfactory/game/game_item_defs.cpp",
		"/C/gamedev/projects/Playfactory/game/game_world.h",
		"/C/gamedev/projects/Playfactory/game/game_world.cpp",
		"/C/gamedev/projects/Playfactory/game/game_state.h",
		"/C/gamedev/projects/Playfactory/game/game_player.h",
		"/C/gamedev/projects/Playfactory/build/build.bat",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/texture.cpp",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/font.cpp",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/playdate_game_ideas.txt",
		"/C/gamedev/projects/Playfactory/game/game_item_defs.h",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/recipes.txt",
		"/C/gamedev/projects/Playfactory/game/game_inventory.h",
		"/C/gamedev/projects/Playfactory/game/game_inventory.cpp",
		"/C/gamedev/projects/Playfactory/game/game_main.cpp",
		"/C/gamedev/projects/Playfactory/game/game_inv_types.h",
		"/C/gamedev/projects/Playfactory/game/game_inv_types.cpp",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy.h",
		"/F/Emulators/sm64.us",
		"/F/gamedev/projects/spall/README.md",
		"/C/Users/robbitay/Documents/MyStuff/Programming/Tutorials/Pointer Tutorial/code/main.cpp",
		"/C/gamedev/projects/Playfactory/notes.todo",
		"/C/gamedev/projects/Playfactory/game/game_item_defs_serialization.cpp",
		"/C/gamedev/projects/Playfactory/data/Resources/Fonts/whacky_joe.fnt",
		"/C/gamedev/projects/Playfactory/data/Resources/Fonts/scrambled_eggs.fnt",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/pig_helpers.cpp",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_basic_macros.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_rectangles.h",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/texture.h",
		"/C/gamedev/projects/Playfactory/game/game_view.h",
		"/C/gamedev/projects/Playfactory/game/game_view.cpp",
		"/C/Users/robbitay/Documents/MyStuff/Programs/PlaydateSDK/C_API/pd_api/pd_api_gfx.h",
		"/C/gamedev/projects/Playfactory/data/Resources/Fonts/bean_font.fnt",
		"/C/gamedev/projects/Playfactory/data/Resources/Fonts/EndlessLove.fnt",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/input.h",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/font.h",
		"/C/gamedev/projects/Playfactory/data/Resources/Fonts/SpaceContract.fnt",
		"/C/gamedev/projects/Playfactory/data/Resources/Fonts/pixel8.fnt",
		"/C/gamedev/projects/Playfactory/data/Resources/Fonts/blocky.fnt",
		"/C/gamedev/projects/Playfactory/game/main_menu.cpp",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/items.txt",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_parsing.h",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/items_decor.txt",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/items_meta.txt",
		"/C/gamedev/projects/Playfactory/game/game_main.h",
		"/C/gamedev/projects/Playfactory/game/game_recipes_serialization.cpp",
		"/C/gamedev/projects/Playfactory/game/game_tile_types.h",
		"/C/gamedev/projects/Playfactory/game/game_item_ids.h",
		"/C/gamedev/projects/Playfactory/game/game_recipes.h",
		"/C/gamedev/projects/Playfactory/game/game_recipes.cpp",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_variable_array.h",
		"/C/gamedev/projects/Playfactory/game/new.txt",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/recipes_sky.txt",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/items_underground.txt",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/items_sky.txt",
		"/C/gamedev/projects/Playfactory/game/game_particles.cpp",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/pig_file.cpp",
		"/C/gamedev/projects/Playfactory/data/Resources/Text/recipes_underground.txt",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/debug.cpp",
		"/C/Users/robbitay/Documents/MyStuff/Programs/PlaydateSDK/Disk/Data/net.diofonk.Reader/code1.txt",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_process_log.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_string_fifo.h",
		"/C/gamedev/projects/Playfactory/lib/include/gylib/gy_resource_manifest.h",
		"/C/Users/robbitay/Documents/MyStuff/Programs/PlaydateSDK/C_API/pd_api/pd_api_file.h",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/sprite_sheet.cpp",
		"/C/gamedev/projects/Playfactory/engine/platform/playdate/pig_file.h"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 170.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "build/build.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 330,
						"regions":
						{
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main.lua",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1112,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 600.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 62.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 355.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.graphvizer_panel":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/TaylorAddons/RunBuildBatInBuildFolder.sublime-build",
	"project": "PlaydateSurvivor.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"main",
				"src\\main.lua"
			],
			[
				"",
				"build\\PlaydateSurvivor.pdx\\main.pdz"
			],
			[
				"playdate",
				"PigEngine\\playdate_game_ideas.txt"
			],
			[
				"notes",
				"Playfactory\\notes.todo"
			],
			[
				"define",
				"GyLib\\gy_defines_check.h"
			],
			[
				"pigmain",
				"PigEngine\\pig_main.cpp"
			],
			[
				"std",
				"GyLib\\gy_std.h"
			],
			[
				"gydef",
				"GyLib\\gy_defines_check.h"
			],
			[
				".d",
				"build\\Playfactory.d"
			],
			[
				"compo",
				"PigEngine\\gcc_compiler_options.txt"
			],
			[
				"compi",
				"PigEngine\\gcc_compiler_options.txt"
			],
			[
				"options",
				"PigEngine\\gcc_compiler_options.txt"
			],
			[
				"input",
				"PigEngine\\input.cpp"
			],
			[
				"main.c",
				"PigEngine\\main.c"
			],
			[
				"info",
				"Playfactory\\data\\pdxinfo"
			],
			[
				"defines",
				"Playfactory\\game\\game_defines.h"
			],
			[
				"defin",
				"Playfactory\\game\\game_defines.h"
			],
			[
				"assert",
				"GyLib\\gy_assert.h"
			],
			[
				"gystd",
				"GyLib\\gy_std.h"
			],
			[
				"main.cpp",
				"PigEngine\\pig_main.cpp"
			],
			[
				"build",
				"build\\build.bat"
			],
			[
				"pla",
				"PigEngine\\playdate_game_ideas.txt"
			],
			[
				"recipessur",
				"Playfactory\\data\\Resources\\Text\\recipes_surface.txt"
			],
			[
				"itemdef",
				"Playfactory\\game\\game_item_defs.h"
			],
			[
				"itemsmach",
				"Playfactory\\data\\Resources\\Text\\items_machines.txt"
			],
			[
				"item",
				"Playfactory\\data\\Resources\\Text\\items_surface.txt"
			],
			[
				"recipe",
				"Playfactory\\data\\Resources\\Text\\recipes.txt"
			],
			[
				"itemd",
				"Playfactory\\game\\game_item_defs.cpp"
			],
			[
				"world",
				"Playfactory\\game\\game_world.h"
			],
			[
				"gamestate",
				"Playfactory\\game\\game_state.h"
			],
			[
				"gameplay",
				"Playfactory\\game\\game_player.h"
			],
			[
				"gy",
				"GyLib\\gy.h"
			],
			[
				"gamemain",
				"Playfactory\\game\\game_main.cpp"
			],
			[
				"itemma",
				"Playfactory\\data\\Resources\\Text\\items_machines.txt"
			],
			[
				"gameinve",
				"Playfactory\\game\\game_inventory.h"
			],
			[
				"note",
				"Playfactory\\notes.todo"
			],
			[
				"scrambe",
				"Playfactory\\data\\Resources\\Fonts\\scrambled_eggs.fnt"
			],
			[
				"gamdef",
				"Playfactory\\game\\game_defines.h"
			],
			[
				"itemmach",
				"Playfactory\\data\\Resources\\Text\\items_machines.txt"
			],
			[
				"inventory",
				"Playfactory\\game\\game_inventory.h"
			],
			[
				"invtype",
				"Playfactory\\game\\game_inv_types.h"
			],
			[
				"gameview",
				"Playfactory\\game\\game_view.cpp"
			],
			[
				"pdgfx",
				"PlaydateSDK\\C_API\\pd_api\\pd_api_gfx.h"
			],
			[
				"gymemory",
				"GyLib\\gy_memory.h"
			],
			[
				"string",
				"GyLib\\gy_string.h"
			],
			[
				"enginno",
				"PigEngine\\playdate_notes.todo"
			],
			[
				"itemsur",
				"Playfactory\\data\\Resources\\Text\\items_surface.txt"
			],
			[
				"recip",
				"Playfactory\\data\\Resources\\Text\\recipes_surface.txt"
			],
			[
				"wor",
				"Playfactory\\game\\game_world.cpp"
			],
			[
				"items",
				"Playfactory\\data\\Resources\\Text\\items.txt"
			],
			[
				"itemsde",
				"Playfactory\\data\\Resources\\Text\\items_decor.txt"
			],
			[
				"gamedeef",
				"Playfactory\\game\\game_defines.h"
			],
			[
				"items.txt",
				"Playfactory\\data\\Resources\\Text\\items.txt"
			],
			[
				"itemsurfa",
				"Playfactory\\data\\Resources\\Text\\items_surface.txt"
			],
			[
				"serializa",
				"Playfactory\\game\\game_item_defs_serialization.cpp"
			],
			[
				"itemssurf",
				"Playfactory\\data\\Resources\\Text\\items_surface.txt"
			],
			[
				"game_state.h",
				"Playfactory\\game\\game_state.h"
			],
			[
				"itemdefs",
				"Playfactory\\game\\game_item_defs_serialization.cpp"
			],
			[
				"serialization",
				"Playfactory\\game\\game_recipes_serialization.cpp"
			],
			[
				"gamrecipe",
				"Playfactory\\game\\game_recipes.h"
			],
			[
				"recipeser",
				"Playfactory\\game\\game_recipes_serialization.cpp"
			],
			[
				"recipes",
				"Playfactory\\data\\Resources\\Text\\recipes_surface.txt"
			],
			[
				"tile",
				"Playfactory\\game\\game_tile_types.h"
			],
			[
				"itemids",
				"Playfactory\\game\\game_item_ids.h"
			],
			[
				"recipesunde",
				"Playfactory\\data\\Resources\\Text\\recipes_underground.txt"
			],
			[
				"file",
				"PigEngine\\pig_file.cpp"
			],
			[
				"processlog",
				"GyLib\\gy_process_log.h"
			],
			[
				"pigdebug",
				"PigEngine\\debug.cpp"
			],
			[
				"pighelper",
				"PigEngine\\pig_helpers.cpp"
			],
			[
				"build.bat",
				"build\\build.bat"
			],
			[
				"game_recipes_serialization.cpp",
				"Playfactory\\game\\game_recipes_serialization.cpp"
			],
			[
				"gamestate.cpp",
				"Playfactory\\game\\game_state.cpp"
			],
			[
				"recieps",
				"Playfactory\\data\\Resources\\Text\\recipes_surface.txt"
			],
			[
				"recipesk",
				"Playfactory\\data\\Resources\\Text\\recipes_sky.txt"
			],
			[
				"itemid",
				"Playfactory\\game\\game_item_ids.h"
			],
			[
				"game_recipes.h",
				"Playfactory\\game\\game_recipes.h"
			],
			[
				"pdfile",
				"PlaydateSDK\\C_API\\pd_api\\pd_api_file.h"
			],
			[
				"pig_",
				"PigEngine\\pig_render.cpp"
			],
			[
				"resourman",
				"GyLib\\gy_resource_manifest.h"
			],
			[
				"game_state.cpp",
				"Playfactory\\game\\game_state.cpp"
			],
			[
				"pig",
				"PigEngine\\pig_main.cpp"
			],
			[
				"gamepart",
				"Playfactory\\game\\game_particles.cpp"
			],
			[
				"pdapi",
				"PlaydateSDK\\C_API\\pd_api\\pd_api_sound.h"
			],
			[
				"std.h",
				"GyLib\\gy_std.h"
			],
			[
				"inven",
				"Playfactory\\game\\game_inventory.h"
			],
			[
				"vectors",
				"GyLib\\gy_vectors.h"
			],
			[
				"color",
				"GyLib\\gy_colors.h"
			],
			[
				"gyextra",
				"GyLib\\gy_extras.h"
			],
			[
				"gyvec",
				"GyLib\\gy_vectors.h"
			],
			[
				"pd_api_e",
				"PigEngine\\pd_api_ext.h"
			],
			[
				"render",
				"PlaydateSDK\\C_API\\Examples\\3D library\\mini3d\\render.c"
			],
			[
				"reamd",
				"Playfactory\\README.md"
			],
			[
				"gy.h",
				"GyLib\\gy.h"
			],
			[
				"gamepla",
				"Playfactory\\game\\game_player.h"
			],
			[
				"version",
				"Playfactory\\game\\game_version.h"
			],
			[
				"mainmenu",
				"Playfactory\\game\\main_menu.h"
			],
			[
				"playdatenote",
				"PigEngine\\playdate_notes.todo"
			],
			[
				"input.cpp",
				"PigEngine\\input.cpp"
			],
			[
				"invent",
				"Playfactory\\game\\game_inventory.cpp"
			],
			[
				"gameplayer",
				"Playfactory\\game\\game_player.cpp"
			],
			[
				"game_tile_types.h",
				"Playfactory\\game\\game_tile_types.h"
			],
			[
				"tiletype",
				"Playfactory\\game\\game_tile_types.h"
			],
			[
				"tiletp",
				"Playfactory\\game\\game_tile_types.h"
			],
			[
				"giti",
				"Playfactory\\.gitignore"
			],
			[
				"helper",
				"PigEngine\\pig_helpers.cpp"
			],
			[
				"ext.h",
				"PigEngine\\pd_api_ext.h"
			],
			[
				"pdgf",
				"PlaydateSDK\\C_API\\pd_api\\pd_api_gfx.h"
			],
			[
				"macro",
				"GyLib\\gy_basic_macros.h"
			],
			[
				"gamewor",
				"Playfactory\\game\\game_world.h"
			],
			[
				"readme.md",
				"Playfactory\\README.md"
			],
			[
				"pdext",
				"PigEngine\\pd_api_ext.h"
			],
			[
				"perfgra",
				"PigEngine\\perf_graph.cpp"
			],
			[
				"mainm",
				"Playfactory\\game\\main_menu.h"
			],
			[
				"gfx",
				"PlaydateSDK\\C_API\\pd_api\\pd_api_gfx.h"
			],
			[
				"texture",
				"PigEngine\\texture.cpp"
			],
			[
				"collision",
				"GyLib\\gy_collision.h"
			],
			[
				"helpe",
				"PigEngine\\pig_helpers.cpp"
			],
			[
				"appstateli",
				"Playfactory\\game\\app_state_list.h"
			],
			[
				"pigplay",
				"PigEngine\\pig_playdate_version.h"
			],
			[
				"game",
				"Playfactory\\game\\game_state.cpp"
			],
			[
				"gmestate",
				"Playfactory\\game\\game_state.cpp"
			],
			[
				"fnt",
				"Playfactory\\data\\Resources\\Fonts\\pixel8.fnt"
			],
			[
				"playd",
				"PigEngine\\playdate_notes.todo"
			],
			[
				"gammain",
				"Playfactory\\game\\game_main.cpp"
			],
			[
				"sublime",
				"PlayDateGame1\\PlayDateGame1.sublime-project"
			],
			[
				"sublimep",
				"PlayDateGame1\\PlayDateGame1.sublime-project"
			],
			[
				"main.h",
				"PlayDateGame1\\engine\\main.h"
			],
			[
				"maincpp",
				"PlayDateGame1\\engine\\main.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"PigwasmS",
				"C:\\gamedev\\lib\\PigWasmStdLib\\PigWasmStdLib.sublime-project"
			],
			[
				"",
				"C:\\gamedev\\projects\\PigEngineTest\\PigEngineTest.sublime-project"
			],
			[
				"PigDemo",
				"C:\\gamedev\\projects\\PigDemoer\\PigDemoer.sublime-project"
			],
			[
				"jOBSEAR",
				"C:\\Users\\robbitay\\Documents\\MyStuff\\Files\\Job Search 2021\\JobSearch2021.sublime-project"
			],
			[
				"Job",
				"C:\\Users\\robbitay\\Documents\\MyStuff\\Files\\Job Search 2021\\JobSearch2021.sublime-project"
			],
			[
				"Jobsear",
				"C:\\Users\\robbitay\\Documents\\MyStuff\\Files\\Job Search 2021\\JobSearch2021.sublime-project"
			],
			[
				"jobsea",
				"C:\\Users\\robbitay\\Documents\\MyStuff\\Files\\Job Search 2021\\JobSearch2021.sublime-project"
			],
			[
				"JobS",
				"C:\\Users\\robbitay\\Documents\\MyStuff\\Files\\Job Search 2021\\JobSearch2021.sublime-project"
			],
			[
				"sm64",
				"C:\\gamedev\\sm64\\sm64.sublime-project"
			],
			[
				"Surefi",
				"C:\\Users\\robbitay\\Documents\\MyStuff\\Work\\Sure-Fi\\AcBridgeApplication\\WiegandApp.X\\AcBridgeApplication.sublime-project"
			],
			[
				"Piggyb",
				"C:\\gamedev\\projects\\PiggyBot\\PiggyBot.sublime-project"
			],
			[
				"Piggybot",
				"C:\\gamedev\\projects\\PiggyBot\\PiggyBot.sublime-project"
			],
			[
				"piggyb",
				"C:\\gamedev\\projects\\PiggyBot\\PiggyBot.sublime-project"
			],
			[
				"PcqWe",
				"C:\\gamedev\\projects\\PcqWebsite\\PcqWebsite.sublime-project"
			],
			[
				"playground",
				"C:\\gamedev\\projects\\Playground\\Playground.sublime-project"
			],
			[
				"plauy",
				"W:\\projects\\Playground\\Playground.sublime-workspace"
			],
			[
				"pcqwe",
				"C:\\gamedev\\projects\\PcqWebsite\\PcqWebsite.sublime-project"
			],
			[
				"pcq",
				"C:\\gamedev\\projects\\PcqWebsite\\PcqWebsite.sublime-project"
			],
			[
				"Play",
				"W:\\projects\\Playground\\Playground.sublime-workspace"
			],
			[
				"SocketClie",
				"C:\\gamedev\\projects\\SocketClient\\SocketClient.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 107.0,
		"last_filter": "EXPORT",
		"selected_items":
		[
			[
				"EXPORT",
				"EXPORT"
			],
			[
				"Globals",
				"Globals"
			],
			[
				"Itemframe",
				"GetItemFrame"
			],
			[
				"InvSlotType",
				"InvSlotType_t"
			],
			[
				"InvSlotBy",
				"GetInvSlotByType"
			],
			[
				"Flags_t",
				"InvSlotFlags_t"
			],
			[
				"PdDrawShee",
				"PdDrawSheetFrame"
			],
			[
				"ItmeFlag",
				"ItemFlags_t"
			],
			[
				"RuntimeId",
				"LookupRuntimeId"
			],
			[
				"TIME_SCAL",
				"TIME_SCALED_ANIM"
			],
			[
				"InvSlot",
				"InvSlot_t"
			],
			[
				"SubAm",
				"SubAnimAmountR32"
			],
			[
				"InsideReci",
				"IsInsideReci"
			],
			[
				"Teture_t",
				"Texture_t"
			],
			[
				"PdDrawtex",
				"PdDrawText"
			],
			[
				"Input_t",
				"AppInput_t"
			],
			[
				"GLobals",
				"Globals"
			],
			[
				"Buffer",
				"MyBufferPrintf"
			],
			[
				"FOnt_t",
				"Font_t"
			],
			[
				"OpenInv",
				"OnOpenInventory"
			],
			[
				"Tryparsef",
				"GetTryParseFailureReasonStr"
			],
			[
				"FindItem",
				"FindItemDef"
			],
			[
				"GetRuntimeId",
				"GetRuntimeIdStr"
			],
			[
				"TryparseEnum",
				"TryParseBitfieldEnum"
			],
			[
				"Vararray",
				"VarArray_t"
			],
			[
				"RECIPE_BOOK",
				"RECIPE_BOOK_PATH"
			],
			[
				"GetFrame",
				"GetTileTypeFrame"
			],
			[
				"Measure",
				"MeasureText"
			],
			[
				"Particle",
				"TrySpawnParticle"
			],
			[
				"Stack_t",
				"ItemStack_t"
			],
			[
				"FindRecip",
				"FindRecipeInBook"
			],
			[
				"GetSlot",
				"GetInvSlotAtGridPos"
			],
			[
				"GetFilename",
				"GetFileNamePart"
			],
			[
				"Plura",
				"Plural"
			],
			[
				"AdRecipe",
				"AddRecipeToBook"
			],
			[
				"NewRecipe",
				"NewRecipe"
			],
			[
				"AssertNull",
				"AssertNullTerm"
			],
			[
				"Substrin",
				"StrSubstring"
			],
			[
				"ProcesslOg",
				"CreateProcessLog"
			],
			[
				"LoadSprite",
				"LoadSpriteSheet"
			],
			[
				"File",
				"playdate_file"
			],
			[
				"TrimWhi",
				"TrimWhitespace"
			],
			[
				"SplitStr",
				"SplitString"
			],
			[
				"PopMem",
				"PopMemMark"
			],
			[
				"SetProcess",
				"SetProcessLogName"
			],
			[
				"GetRadnR32",
				"GetRandR32"
			],
			[
				"UdpateAnimaUp",
				"UpdateAnimationUp"
			],
			[
				"TrackMax",
				"TrackMax"
			],
			[
				"abs",
				"Abs"
			],
			[
				"Font_t",
				"Font_t"
			],
			[
				"ToVec2i",
				"ToVec2i"
			],
			[
				"ANimate",
				"Animate"
			],
			[
				"InVSlot",
				"InvSlot_t"
			],
			[
				"Basicall",
				"BasicallyEqualR32"
			],
			[
				"LerpR32",
				"LerpR32"
			],
			[
				"Circle_t",
				"Circle_t"
			],
			[
				"GetItem",
				"GetItemIdFrame"
			],
			[
				"Dir2_t",
				"Dir2_t"
			],
			[
				"AngleDif",
				"AngleDiffR32"
			],
			[
				"AppIN",
				"AppInput_t"
			],
			[
				"AppInput",
				"AppInput_t"
			],
			[
				"Animate",
				"AnimateU64"
			],
			[
				"ItemId",
				"ItemId_t"
			],
			[
				"DrawRec",
				"PdDrawRec"
			],
			[
				"DrawMode",
				"LCDBitmapDrawMode"
			],
			[
				"MinNoIn",
				"MinNoInfinitiesR32"
			],
			[
				"INFIN",
				"INFINITY"
			],
			[
				"RecInter",
				"RecsIntersect"
			],
			[
				"SolidColor",
				"LCDSolidColor"
			],
			[
				"Dir2Ex",
				"Dir2Ex_t"
			],
			[
				"PdDrawTe",
				"PdDrawText"
			],
			[
				"VarArrayCle",
				"VarArrayClear"
			],
			[
				"FreeString",
				"FreeString"
			],
			[
				"NUM_MS",
				"NUM_MS_PER_SECOND"
			],
			[
				"RecINfal",
				"RecInflate"
			],
			[
				"PdDraw",
				"PdDrawTexturedRec"
			],
			[
				"Utf8",
				"GetCodepointForUtf8"
			],
			[
				"_COL",
				"LCD_COLUMNS"
			],
			[
				"PrinInA",
				"PrintInArenaVa"
			],
			[
				"PrintINA",
				"PrintInArenaStr"
			],
			[
				"PrintINAren",
				"PrintInArenaVa"
			],
			[
				"IsNUll",
				"IsStrNullTerminated"
			],
			[
				"Pi32",
				"Pi32"
			],
			[
				"Vec2From",
				"Vec2FromAngle"
			],
			[
				"addCheckmarkMenuItem",
				"addCheckmarkMenuItem"
			],
			[
				"PDSystemEvent",
				"PDSystemEvent"
			],
			[
				"OsGetPa",
				"OsGetMemoryPageSize"
			],
			[
				"MemAre",
				"MemArenaType_t"
			],
			[
				"InitPaged",
				"InitMemArena_PagedHeapArena"
			],
			[
				"MemArena_Std",
				"InitMemArena_StdHeap"
			],
			[
				"PrintIna",
				"PrintInArenaVa"
			],
			[
				"PlaydateAPI",
				"PlaydateAPI"
			],
			[
				"MyBre",
				"MyBreak"
			],
			[
				"DoRec",
				"DoRecsIntersect"
			],
			[
				"Key_T",
				"Key_t"
			],
			[
				"BindTe",
				"BindTexture1"
			],
			[
				"BindTexture",
				"BindTexture1"
			],
			[
				"Bindtexture",
				"BindTexture1"
			],
			[
				"WriteLine",
				"WriteLine_D"
			],
			[
				"FloorR",
				"FloorR64i"
			],
			[
				"Startlo",
				"StartLoadTexture"
			],
			[
				"KeyDown",
				"KeyDown"
			],
			[
				"Texture",
				"Texture_t"
			],
			[
				"RandomSer",
				"RandomSeriesGetR32"
			],
			[
				"Oscillate",
				"OscillateBy"
			],
			[
				"pagehead",
				"HeapPageHeader_t"
			],
			[
				"BALL_TRA",
				"BALL_TRAIL_LENGTH"
			],
			[
				"PushMar",
				"PushMemMark"
			],
			[
				"newStin",
				"NewStringInArenaNt"
			],
			[
				"VarArray_t",
				"VarArray_t"
			],
			[
				"glTexPa",
				"glTexParameteri"
			],
			[
				"Mousebtn",
				"MouseBtn_t"
			],
			[
				"WASM_PAGE",
				"WASM_MEM_PAGE_SIZE"
			],
			[
				"ldexp",
				"ldexp"
			],
			[
				"AllocStr",
				"AllocString"
			],
			[
				"VarArrayRemove",
				"VarArrayRemove"
			],
			[
				"DoRecs",
				"DoRecsIntersect"
			],
			[
				"VertBuff",
				"VertBuffer_t"
			],
			[
				"Arena_t",
				"MemArena_t"
			],
			[
				"Min",
				"MIN"
			],
			[
				"AllocMem",
				"AllocMem"
			],
			[
				"Color_t",
				"Color_t"
			],
			[
				"Sqrt",
				"sqrt"
			],
			[
				"ToDe",
				"ToDegrees32"
			],
			[
				"Shader",
				"Shader_t"
			],
			[
				"MemAren",
				"MemArenaType_t"
			],
			[
				"InitMem",
				"InitMemArena_Alias"
			],
			[
				"ClearArr",
				"ClearArray"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 299.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
